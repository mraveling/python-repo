{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Test Data Generator\n",
    "\n",
    "This notebook contains Python functions to generate test data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import random\n",
    "import string\n",
    "\n",
    "def generate_integers(size):\n",
    "    \"\"\"Generates a list of random integer values.\"\"\"\n",
    "    return [random.randint(0, 100) for _ in range(size)]\n",
    "\n",
    "def generate_decimals(size):\n",
    "    \"\"\"Generates a list of random decimal values.\"\"\"\n",
    "    return [random.uniform(0, 100) for _ in range(size)]\n",
    "\n",
    "def generate_strings(size, length):\n",
    "    \"\"\"Generates a list of random string values.\"\"\"\n",
    "    return [''.join(random.choices(string.ascii_letters + string.digits, k=length)) for _ in range(size)]\n",
    "\n",
    "# Example usage:\n",
    "integers = generate_integers(10)\n",
    "decimals = generate_decimals(10)\n",
    "strings = generate_strings(10, 5)\n",
    "\n",
    "print(\"Integers:\", integers)\n",
    "print(\"Decimals:\", decimals)\n",
    "print(\"Strings:\", strings)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
